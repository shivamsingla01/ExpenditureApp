{"version":3,"sources":["Components/NewExpense/Expenseform.js","Components/NewExpense/NewExpense.js","Components/Expenses/expense-filter.js","Components/Expenses/Expensedate.js","Components/Expenses/Expenseitems.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","App.js","index.js"],"names":["Expenseform","props","useState","inputTitle","setinputTitle","inputAmount","setinputAmount","inputDate","setinputDate","onSubmit","event","preventDefault","expensedata","title","amount","date","Date","getnewdata","className","type","value","onChange","target","min","step","max","Newexpense","data","isNaN","getTime","alert","id","Math","random","toString","console","log","liftup","Expensefilter","selected","onChangeFilter","Expensedate","month","toLocaleString","day","year","getFullYear","Expenseitem","onClick","onclickhandler","ExpenseList","buttonhandler","idkey","updateData","items","length","map","expense","y","reduce","accum","item","parseInt","ChartBar","barheight","maxValue","round","style","height","label","Chart","arr","datapoints","datapoint","maxval","ExpensesChart","chartDatapoints","expenses","getMonth","Expenses","filteredyear","setFilteredyear","filteredexpenses","filter","keyid","changeData","dummy","App","updateexpenses","kid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c596ea6c.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nimport \"./Expenseform.css\"\r\nconst Expenseform = (props) => {\r\n    const [inputTitle,setinputTitle] = useState('');\r\n    const [inputAmount,setinputAmount] = useState('');\r\n    const [inputDate,setinputDate] = useState('');\r\n    const titleChangeHandler = (event)=>{\r\n        //console.log(event.target.value);\r\n    setinputTitle(event.target.value);\r\n    };\r\n    const amountChangeHandler = (event) => {\r\n       // console.log(event.target.value);\r\n        setinputAmount(event.target.value);\r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        //console.log(event.target.value);\r\n        setinputDate(event.target.value);\r\n    };\r\n   const submitHandler = (event) => {\r\n   event.preventDefault();\r\n   const expensedata = {\r\n       \r\n   title : inputTitle,\r\n   amount : inputAmount,\r\n   date : new Date(inputDate)\r\n   };\r\n   props.getnewdata(expensedata);\r\n   setinputTitle('');\r\n   setinputAmount('');\r\n   setinputDate('');\r\n   };\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type='text' value ={inputTitle} onChange={titleChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type='number' min=\"0.01\" step=\"0.01\" value = {inputAmount} onChange={amountChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type='date' min=\"2019-01-01\" max=\"2021-07-01\" value={inputDate} onChange={dateChangeHandler}/>\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button type=\"submit\" >Add Expense</button>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\nexport default Expenseform;\r\n","import \"./Newexpense.css\"\r\nimport Expenseform from \"./Expenseform\"\r\nconst Newexpense = (props) => {\r\n    const newdata = (data) => {\r\n        //console.log(data);\r\n        if(data.title===\"\"){alert(\"Empty Title section !!\");return;}\r\n        if(data.amount===\"\"){alert(\"Empty Amount section !! \");return;}\r\n        if(isNaN(data.date.getTime())){alert(\"Invalid date !!\");return;}\r\n        \r\n    const expensedata = {\r\n            ...data,\r\n            id: Math.random().toString()\r\n        };\r\n        console.log(expensedata.id)\r\n        props.liftup(expensedata);\r\n    }\r\n    return (\r\n        <div className=\"new-expense\">\r\n         <Expenseform getnewdata = {newdata}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Newexpense;","import \"./expense-filter.css\"\r\n\r\nconst Expensefilter = (props) => {\r\n    const onselectHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n    }\r\nreturn (\r\n    <div className=\"expenses-filter\">\r\n        <div className = \"expenses-filter__control\">\r\n            <label>Filter by Year</label>\r\n            <select value={props.selected} onChange={onselectHandler}>\r\n            <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n};\r\n\r\nexport default Expensefilter;","import \"./Expensedate.css\"\r\nfunction Expensedate(props){\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n  <div className=\"expense-date\">\r\n    <div className=\"expense-date__month\">{month}</div>\r\n    \r\n    <div className=\"expense-date__day\">{day}</div>\r\n    <div className=\"expense-date__year\">{year}</div>\r\n    \r\n    </div>\r\n    );\r\n}\r\nexport default Expensedate;","import Expensedate from \"./Expensedate.js\"\r\nimport \"./Expenseitem.css\";\r\nfunction Expenseitem(props){\r\n    const onchangehandler = (event) =>{\r\n        //console.log(props.id);\r\n    props.onclickhandler(props.id);\r\n    };\r\n    //console.log(props);\r\nreturn (\r\n<div className=\"expense-item\">\r\n    <Expensedate date={props.date} />\r\n    <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n    </div>\r\n    <button className = \"delete-button\" onClick = {onchangehandler}>Delete</button>\r\n    </div>);\r\n}\r\nexport default Expenseitem;","\r\n//import { useState } from \"react\";\r\nimport Expenseitem from \"./Expenseitems\"\r\nimport \"./ExpensesList.css\"\r\n\r\nconst ExpenseList = (props) => {\r\n    \r\nconst buttonhandler = (idkey) => {\r\n    props.updateData(idkey);\r\n    \r\n}; \r\n\r\nif(props.items.length===0){\r\n    return (<h2 className=\"expenses-list__fallback\">No expenses.</h2>)\r\n}\r\n   \r\n       return (<div className=\"expenses-list\">{props.items.map(expense => <Expenseitem key = {expense.id} id = {expense.id} title={expense\r\n        .title} amount={expense.amount} date={expense.date} onclickhandler={buttonhandler}/>)}\r\n        <div className=\"total-expense\">Total expenses of year {props.y}     =    ${props.items.reduce((accum,item)=>accum+parseInt(item.amount),0)} </div>\r\n        </div>);\r\n   \r\n};\r\nexport default ExpenseList;\r\n","import \"./ChartBar.css\"\r\nconst ChartBar = (props) => {\r\n    let barheight = '0%';\r\n    if(props.maxValue>0){\r\n        barheight = Math.round((props.value/props.maxValue)*100) +'%';\r\n    }\r\n    //console.log(barheight);\r\nreturn (<div className = \"chart-bar\">\r\n    <div className = \"chart-bar__inner\">\r\n        <div className = \"chart-bar__fill\" style = {{height : barheight}}></div>\r\n    </div>\r\n    <div className = \"chart-bar__label\">{props.label}</div>\r\n</div>)\r\n};\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\"\r\nimport \"./Chart.css\"\r\nconst Chart = (props) => {\r\n  const arr = props.datapoints.map(datapoint => datapoint.value);\r\n  const maxval= Math.max(...arr);\r\n    return (\r\n        <div className = \"chart\">\r\n\r\n            {props.datapoints.map((datapoint) => (\r\n                <ChartBar key={datapoint.label} value = {datapoint.value} maxValue = {maxval} label = {datapoint.label}/>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\nexport default Chart;","\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart = (props) => {\r\n    const chartDatapoints = [\r\n        {label : 'Jan', value : 0},\r\n        {label : 'Feb', value : 0},\r\n        {label : 'Mar', value : 0},\r\n        {label : 'Apr', value : 0},\r\n        {label : 'May', value : 0},\r\n        {label : 'Jun', value : 0},\r\n        {label : 'Jul', value : 0},\r\n        {label : 'Aug', value : 0},\r\n        {label : 'Sep', value : 0},\r\n        {label : 'Oct', value : 0},\r\n        {label : 'Nov', value : 0},\r\n        {label : 'Dec', value : 0}\r\n    ];\r\n    for(let expense of props.expenses){\r\n        const month = expense.date.getMonth();\r\n        \r\n        chartDatapoints[month].value += expense.amount;\r\n       // console.log(chartDatapoints[month].value);\r\n    }\r\n    return <Chart datapoints = {chartDatapoints} />;\r\n\r\n};\r\nexport default ExpensesChart;","import { useState } from 'react'\r\n\r\nimport Expensefilter from \"./expense-filter\"\r\nimport ExpenseList from './ExpensesList.js'\r\nimport ExpensesChart from './ExpensesChart.js'\r\nimport \"./expenses.css\"\r\nconst Expenses = (props) => {\r\n    const [filteredyear, setFilteredyear] = useState('2021');\r\n   const changefilteryear = (year) => {\r\n       setFilteredyear(year);\r\n   }\r\n   const filteredexpenses = props.data.filter((expense)=>{\r\n    return expense.date.getFullYear().toString() === filteredyear;\r\n   });\r\n   const updatedata = (keyid) => {\r\n    props.changeData(keyid);\r\n   }\r\n   //console.log(\"hi\");\r\n    return (\r\n    \r\n    <div className=\"expenses\"> \r\n     <Expensefilter selected={filteredyear} onChangeFilter={changefilteryear}/>\r\n     <ExpensesChart expenses = {filteredexpenses} />\r\n     <ExpenseList items={filteredexpenses} updateData={updatedata} y={filteredyear}/>\r\n    \r\n  </div>);\r\n};\r\nexport default Expenses;\r\n","import { useState } from \"react\"\nimport Newexpense from \"./Components/NewExpense/NewExpense\"\nimport Expenses from \"./Components/Expenses/Expenses\"\nvar dummy = [];\n\n\nfunction App() {\n  const [expenses,updateexpenses] = useState(dummy);\n  const getdata = (data) => {\n    console.log(data.id);\n    updateexpenses(expenses => {return [data, ...expenses];});\n  };\n  const changedata = (kid) =>{\n    console.log(kid);\n  updateexpenses(expenses => {return expenses.filter((expense)=>{return expense.id!==kid;})});\n  }\n  return (\n    <div>\n      \n      <Newexpense liftup = {getdata}/>\n      <Expenses data = {expenses} changeData={changedata}/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}